ZZ - сохраняет изменения и прекращает работу (vi)
:wq - сохранение и выход (ex)
:e! - отмена изменений за сеанс и возврат к первоначальному файлу (к последней сохранёной версии)
:q! - отказ от изменений и выход

i - переход в режим вставки
ESC - выход из режима вставки
ENTER в режиме вставки - переход на новую строку


************************************************************************
Перемещение курсора в командном режиме:
h - на один символ в лево (5h - на 5 символов в лево)
j - на одну строку вниз (3j - на 3 строки вниз)
k - на одну строку вверх (10k - на 10 строк вверх)
l - на один символ вправо (2l - на 2 символа вправо)
Также можно использовать курсорные клавиши для перемещения



************************************************************************
Перемещения в строке:
0 - перемещение в начало строки
$ - перемещение курсора в конец строки

строки на экране не являются строками в памяти(строка это набор символов до символа перевода строки - при нажатии Enter).


************************************************************************
Перемещение по текстовым блокам:
w(b - обратно) - перемещение по словам (знаки препинания тоже считаются словами)// 2w, 5b
W(B - обратно) - перемещение без учёта символов и знаков препинания// 15W, 3B
G - в конец файла (1G - в начало файла, 55G - переход на 55 сторку)


************************************************************************
Простая правка текста:
i - для вставки (insert)
a - для добавления (append)
c - для изменения (change) #cw до конца слова, c2b назад на 2 слова, c$ до конца строки, c0 до начала строки  
d - для удаления (delete) # d5w(или 5dw) удалить пять слов вперёд - считать от курсора 
cc - полностью изменить текущую строку
r[символ] - замена символа на другой в позиции курсора # rF 
[число]s - замена нескольких символов # 5s - замена 5 символов
S - замена целой строки # отличие от С которая меняет остаток строки (от курсора) - S удаляет всю строку независимо от положения курсора
R - замещает текст
~ меняет регистр строчной на прописную и наоборот


Чтобы переместить текст - d (удаление) + p (put)
При копировании - y (yank) + p (put)
***********copy********************
yy — Янкнуть (скопировать) текущую строку, включая символ новой строки.
3yy — 3yy (копирование) трех строк, начиная с строки, в которой находится курсор.
y$ — копировать (копировать) все от курсора до конца строки.
y^ — Янкинг (копирование) всего от курсора до начала строки.
yw — Янкнуть (копировать) до начала следующего слова.
yiw — yiw (скопировать) текущее слово.




******* delete text **********
dw - удаление по словам
dd(D) - удаление по строкам // 2dd - удаляет 2 строки вниз от курсора
d$(D) - до конца строки от курсора
d0 - до начала строки
x - удаление символа на котором стоит курсор // 5x  - удаление 5 символов справа от курсора и на котором стоит курсор
X - удаление символа перед курсором
u - отмена последней команды, если удалил не то
U - востановление строки в первоночальном состоянии, то есть до внесения в неё каких либо изменений.
************************************************************************
******* перемещение текста ******

******* поиск текста ************
/text{enter}
нажать {n} чтобы найти следующее вхождение
нажать {N} чтобы найти предыдущее вхождение
************************************************************************

**********buffers*****************************************************
буфер это некий сеанс редактирования определённого файла.

:bn следующий буфер
:bp предыдущий
:ls просмотреть открытые буферы
:b имя_буфера переключиться на буфер, очень удобно комбинируется с табом, к примеру пишем :b domain, жмём таб и нам подставляется открытый iis_domain.cpp
:bd удалить текущий буфер, правда стоит заметить, что если этот буфер единственное окно то vim закроется
:bd имя_буфера удалить буфер по имени


**********tabs**************************************************************
открытие нового файла в vim в новом табе
:tabedit file.py
tabedit - это команда, которая аналогична по сути команде edit, но только открывает файл в отдельной вкладке.

:tabnew в нормальном режиме, он откроет новую вкладку с пустым буфером. Можно сразу открыть вкладку с файлом, передав его имя как параметр
:tabnew futuri.co

Переключаться по табам можно командами :tabn и :tabp

***********windows****************************************************************
Команды:
:split — разделить, если указан файл то открыть его
:vsplit — тоже только по вертикали
:sb[uffer] — разделить и редактировать буффер. Важный момент: если заново открыть файл (к примеру через :split) то буфер сбрасывается,
            вместе с историей отмен и положением курсора

Ctrl-w стрелочки :) — переместиться на окно влево/вправо/вверх/вниз
Сtrl-w o — развернуть окно
Ctrl-w c — закрыть
Ctrl-w s — разделить окно по горизонтали
Ctrl-w v — тоже, только по вертикали
Ctrl-w ] — разделить и перейти на определение чего-то, что под курсором
Ctrl-w f — разделить и в новом окне открыть файл путь к которому находится под курсором, очень удобно делать на инклюдах

:NERDTreeToggle - открыть дерево каталогов (после установки плагина)



